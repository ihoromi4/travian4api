В настоящем файле описывается реализация времени в API.

На отдельно взятом сервере travian указывается время для отдельного часового пояса.
В настройках аккаунта часовой пояс можно выбрать, после чего время будет отображаться для этого
часового пояса.
Сервер находиться в определенной стране и часовом поясе, но он никак особо не отмечен в списке
часовых поясов.
Поэтому API работает с тем часовым поясом, который выбрал пользователь.


Работа с временем в python3:

Для реализации многих алгоритмов нужно использовать арифметику времени.
Самой простой является UNIX-арифметика. В ней время представляется числом с
плавающей запятой, единица измерения - секунда. Начало отсчета 1970 год.

UNIX-арифметика является основной в API.


Представление времени в travian:

Сервер travian.ru:
    Время сервера:  21:48:39
    Постройка:  5:11:49 ч. Готово в 03:02
    Нападение: 0:20:01 ч.
    Казарма:  0:54:46	22:48
    Конюшня:  2:59:31	00:53
    Кузница:  4:33:05	02:27
    Отчет:  сегодня, 21:08

Сервер travian.com:
    Server time:  18:49:34
    Постройка:  2:14:40 hrs. done at 21:10
    Атака:  in 0:02:43 hrs.
    Конюшня:  1:00:16	19:56
    Отчет:  today, 18:55
    Отчет:  11.01.17, 23:32
    Сообщение:  today, 15:05
    Сообщение:  03.01.17, 09:09


В настройках доступно несколько форматов представления времени:
    EU (dd.mm.yy, 24h)
    US (mm/dd/yy, 12h)
    UK (dd/mm/yy, 12h)
    ISO (yy/mm/dd, 24h)

Для начала реализуем чтение времени только в формате EU (dd.mm.yy, 24h).

Функции для реализации:
f('dd.mm.yy') -> float #  UNIX-time
f('hh:MM:ss') -> float #  UNIX-time
f('dd.mm.yy', 'hh:MM:ss') -> float #  UNIX-time
f(UNIX-time) -> (str, str) #  ('dd.mm.yy', 'hh:MM:ss')


import datetime
def to_datetime(s):
  date, time = s.split(', ')
  data_format = '%d.%m.%y'
  time_format = '%H:%M'
  try:
    date = datetime.datetime.strptime(date, data_format).date()
  except ValueError:
    date = datetime.datetime.now().date()
  time = datetime.datetime.strptime(time, time_format).time()
  return datetime.datetime.combine(date, time)
